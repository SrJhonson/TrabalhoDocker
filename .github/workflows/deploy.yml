name: CI/CD Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Login no Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build imagem Docker
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/videogame-app ./backend

      - name: Push da imagem para o Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/videogame-app

      - name: Copiar arquivos para o servidor remoto via SSH
        uses: appleboy/scp-action@v0.1.4
        with:
          host: 201.23.3.86
          username: aluno
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "./docker-compose.yml"
          target: "~/app"
          strip_components: 0

      - name: Acesso SSH e deploy remoto
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: 201.23.3.86
          username: aluno
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ~/app

            docker stop videogame-app || true
            docker rm videogame-app || true

            docker stop sonar || true
            docker rm sonar || true

            docker run -d --name sonar -p 9000:9000 sonarqube
            sleep 40

            sonar-scanner \
              -Dsonar.projectKey=video-game-crud \
              -Dsonar.sources=backend \
              -Dsonar.host.url=http://localhost:9000 \
              -Dsonar.login=${{ secrets.SONAR_TOKEN }}

            docker stop sonar && docker rm sonar

            docker-compose down
            docker-compose up -d
