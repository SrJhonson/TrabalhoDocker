name: CI/CD Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Configurar chave SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Login no Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build da imagem da aplicação
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/minha-aplicacao:latest ./backend

      - name: Push da imagem para o Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/minha-aplicacao:latest

      - name: Copiar arquivos para o servidor remoto
        uses: appleboy/scp-action@master
        with:
          host: 201.23.3.86
          username: aluno
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "."
          target: "~/app"
          strip_components: 0

      - name: Executar deploy remoto
        uses: appleboy/ssh-action@master
        with:
          host: 201.23.3.86
          username: aluno
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ~/app

            echo "🚀 Reiniciando SonarQube na porta 8151..."
            docker stop sonar || true
            docker rm sonar || true
            docker run -d --name sonar \
              -p 8151:9000 \
              -e SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true \
              sonarqube:lts

            echo "⏳ Aguardando endpoint de análise do SonarQube..."
            for i in {1..30}; do
              curl -s -m 5 http://localhost:8151/api/v2/analysis/version > /dev/null && {
                echo "✅ Endpoint de análise do Sonar está pronto!"
                break
              }
              echo "⏱️ Esperando endpoint de análise... ($i/30)"
              sleep 5
            done

            echo "🧪 Executando análise com sonar-scanner..."
            docker run --rm \
              -v $PWD:/usr/src \
              -w /usr/src \
              --add-host=host.docker.internal:host-gateway \
              sonarsource/sonar-scanner-cli \
              sonar-scanner \
                -Dsonar.projectKey=videogame-app \
                -Dsonar.projectName="Videogame App" \
                -Dsonar.sources=. \
                -Dsonar.host.url=http://host.docker.internal:8151 \
                -Dsonar.login=${{ secrets.SONAR_TOKEN }}

            if [ $? -ne 0 ]; then
              echo "❌ Análise do SonarQube falhou. Abortando deploy."
              exit 1
            fi

            echo "📊 Análise concluída com sucesso!"

            echo "🛑 Encerrando SonarQube..."
            docker stop sonar || true

            echo "🔁 Atualizando containers da aplicação..."
            docker compose down
            docker compose up -d --build

            echo "✅ Deploy concluído com sucesso!"
